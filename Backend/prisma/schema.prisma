// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
 // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int              @id @default(autoincrement())
  address            String           @unique
  status             String?         
  lastProcessedBlock BigInt?

  // Relations
  collaterals        MintedToken[]
  borrows            BorrowedToken[]
  deposits           DepositedToken[]
}

model MintedToken {
  id           Int    @id @default(autoincrement())
  userId       Int
  tokenAddress String
  amount       BigInt @default(0) // balance tracked internally (minted token balance)
  locked       BigInt @default(0) // portion locked against borrow

  user         User   @relation(fields: [userId], references: [id])

  @@unique([userId, tokenAddress])
}

model BorrowedToken {
  id       Int    @id @default(autoincrement())
  userId   Int
  token    String     //mainly mUSDC
  amount   BigInt @default(0) // loan balance

  user     User   @relation(fields: [userId], references: [id])

  @@unique([userId, token])
}

model DepositedToken {
  id           Int    @id @default(autoincrement())
  userId       Int
  tokenAddress String
  amount       BigInt @default(0) // total deposited collateral tokens
  
  user         User   @relation(fields: [userId], references: [id])

  @@unique([userId, tokenAddress])
}
